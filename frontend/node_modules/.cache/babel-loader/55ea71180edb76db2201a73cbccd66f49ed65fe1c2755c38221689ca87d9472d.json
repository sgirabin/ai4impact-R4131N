{"ast":null,"code":"var _jsxFileName = \"/Users/isakrabin/Development/github/grow-platform/frontend/src/components/RegistrationForm/RegistrationForm.js\",\n  _s = $RefreshSig$();\n// src/components/RegistrationForm/RegistrationForm.js\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport '../../styles/global.css';\nimport './RegistrationForm.css';\n\n// Define the available topics for selection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst topics = {\n  'Science': ['Physics', 'Quantum Physics', 'Biology', 'Chemistry'],\n  'Computer Science': ['AI', 'Python Programming', 'Java Programming', 'Data Science'],\n  'Engineering': ['Mechanical Engineering', 'Electrical Engineering'],\n  'Mathematics': ['Algebra', 'Geometry', 'Calculus'],\n  'Business': ['Marketing', 'Finance']\n};\nconst difficultyLevels = ['Beginner', 'Intermediate', 'Advanced'];\nconst RegistrationForm = ({\n  onRegister,\n  onShowLogin\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [language, setLanguage] = useState('');\n  const [selectedTopics, setSelectedTopics] = useState([]);\n  const [difficulty, setDifficulty] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(t('passwords_do_not_match'));\n      return;\n    }\n    const userData = {\n      name,\n      email,\n      username,\n      password,\n      language,\n      preferences: {\n        selectedTopics,\n        difficulty\n      }\n    };\n    await axios.post('/api/register', userData); // Send user data with preferences\n    onRegister(userData);\n  };\n  const handleTopicChange = (topic, subTopic) => {\n    const newSelectedTopics = {\n      ...selectedTopics\n    };\n    if (!newSelectedTopics[topic]) {\n      newSelectedTopics[topic] = [];\n    }\n    if (newSelectedTopics[topic].includes(subTopic)) {\n      newSelectedTopics[topic] = newSelectedTopics[topic].filter(item => item !== subTopic);\n    } else {\n      newSelectedTopics[topic].push(subTopic);\n    }\n    setSelectedTopics(newSelectedTopics);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t('register')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: t('preferred_language')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: t('select_language')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"id\",\n            children: \"Indonesian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hi\",\n            children: \"Hindi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: t('interest_topics')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topics-container\",\n          children: Object.keys(topics).map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: topic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), topics[topic].map(subTopic => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedTopics[topic] && selectedTopics[topic].includes(subTopic),\n                onChange: () => handleTopicChange(topic, subTopic)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: subTopic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, subTopic, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this))]\n          }, topic, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: t('difficulty_level')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: difficulty,\n          onChange: e => setDifficulty(e.target.value),\n          required: true,\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: level,\n            children: level\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: t('register')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"4lPBHMRvhzU6fs7A2yyGrCN1kSg=\", false, function () {\n  return [useTranslation];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useTranslation","axios","jsxDEV","_jsxDEV","topics","difficultyLevels","RegistrationForm","onRegister","onShowLogin","_s","t","name","setName","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","language","setLanguage","selectedTopics","setSelectedTopics","difficulty","setDifficulty","handleSubmit","e","preventDefault","alert","userData","preferences","post","handleTopicChange","topic","subTopic","newSelectedTopics","includes","filter","item","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","Object","keys","map","type","checked","level","_c","$RefreshReg$"],"sources":["/Users/isakrabin/Development/github/grow-platform/frontend/src/components/RegistrationForm/RegistrationForm.js"],"sourcesContent":["// src/components/RegistrationForm/RegistrationForm.js\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport '../../styles/global.css';\nimport './RegistrationForm.css';\n\n// Define the available topics for selection\nconst topics = {\n  'Science': ['Physics', 'Quantum Physics', 'Biology', 'Chemistry'],\n  'Computer Science': ['AI', 'Python Programming', 'Java Programming', 'Data Science'],\n  'Engineering': ['Mechanical Engineering', 'Electrical Engineering'],\n  'Mathematics': ['Algebra', 'Geometry', 'Calculus'],\n  'Business': ['Marketing', 'Finance'],\n};\n\nconst difficultyLevels = ['Beginner', 'Intermediate', 'Advanced'];\n\nconst RegistrationForm = ({ onRegister, onShowLogin }) => {\n  const { t } = useTranslation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [language, setLanguage] = useState('');\n  const [selectedTopics, setSelectedTopics] = useState([]);\n  const [difficulty, setDifficulty] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(t('passwords_do_not_match'));\n      return;\n    }\n    const userData = { name, email, username, password, language, preferences: { selectedTopics, difficulty } };\n    await axios.post('/api/register', userData);  // Send user data with preferences\n    onRegister(userData);\n  };\n\n  const handleTopicChange = (topic, subTopic) => {\n    const newSelectedTopics = { ...selectedTopics };\n    if (!newSelectedTopics[topic]) {\n      newSelectedTopics[topic] = [];\n    }\n\n    if (newSelectedTopics[topic].includes(subTopic)) {\n      newSelectedTopics[topic] = newSelectedTopics[topic].filter(item => item !== subTopic);\n    } else {\n      newSelectedTopics[topic].push(subTopic);\n    }\n    setSelectedTopics(newSelectedTopics);\n  };\n\n  return (\n    <div className=\"registration-form\">\n      <h2>{t('register')}</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Existing form fields */}\n        <div className=\"form-group\">\n          <label>{t('preferred_language')}</label>\n          <select value={language} onChange={(e) => setLanguage(e.target.value)} required>\n            <option value=\"\">{t('select_language')}</option>\n            <option value=\"id\">Indonesian</option>\n            <option value=\"hi\">Hindi</option>\n            <option value=\"en\">English</option>\n          </select>\n        </div>\n\n        {/* Topics Selection */}\n        <div className=\"form-group\">\n          <label>{t('interest_topics')}</label>\n          <div className=\"topics-container\">\n            {Object.keys(topics).map((topic) => (\n              <div key={topic}>\n                <label>{topic}</label>\n                {topics[topic].map((subTopic) => (\n                  <div key={subTopic}>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedTopics[topic] && selectedTopics[topic].includes(subTopic)}\n                      onChange={() => handleTopicChange(topic, subTopic)}\n                    />\n                    <label>{subTopic}</label>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Difficulty Level Selection */}\n        <div className=\"form-group\">\n          <label>{t('difficulty_level')}</label>\n          <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)} required>\n            {difficultyLevels.map((level) => (\n              <option key={level} value={level}>{level}</option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\">{t('register')}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}