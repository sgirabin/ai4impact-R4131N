{"ast":null,"code":"const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(res))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(res);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.translator?.translate(...args);\n  }\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };","map":{"version":3,"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","copy","a","s","t","forEach","m","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","pushPath","concat","push","getPath","getPathWithDefaults","data","defaultData","value","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","RegExpCache","constructor","capacity","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","filter","c","r","map","join","matched","test","ki","substring","deepFind","arguments","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","_len","Array","_key","forward","_len2","_key2","_len3","_key3","deprecate","_len4","_key4","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","event","numListeners","off","emit","cloned","from","entries","_ref","observer","numTimesAdded","_ref2","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","addResource","silent","addResources","resources","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","n","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","checkedLoadedFor","Translator","services","changeLanguage","language","exists","interpolation","resolved","extractFromKey","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","resType","toString","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","extendTranslation","usedDefault","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","_this","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","todos","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","reduce","parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","range","opts","opt","rest","trimmedKey","isNaN","parseInt","createCachedFormatter","fn","cache","optForCache","formatParams","formatter","Formatter","formats","number","NumberFormat","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","add","addCached","findIndex","mem","formatted","valOptions","locale","removePending","q","pending","pendingCount","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","done","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","I18n","modules","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","storeApi","storeApiChained","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","_this2","isLanguageChangingTo","setLngProps","setLng","cacheUserLanguage","async","detect","getFixedT","keyPrefix","_this3","fixedT","resultKey","_len5","_key5","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","rtlLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","membersToCopy","clonedData","prev","acc","_len6","_key6","instance"],"sources":["/Users/isakrabin/Development/github/grow-platform/frontend/node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(res))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(res);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.translator?.translate(...args);\n  }\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}