{"ast":null,"code":"var _jsxFileName = \"/Users/isakrabin/Development/github/grow-platform/frontend/src/components/VideoPlayer/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport '../../styles/global.css';\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  video\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [captions, setCaptions] = useState([]);\n  useEffect(() => {\n    // Fetch captions from backend\n    axios.get(`/api/captions?videoId=${video.id}`).then(response => setCaptions(response.data)).catch(error => console.error('Error fetching captions:', error));\n  }, [video]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: video.url,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), captions.map(caption => /*#__PURE__*/_jsxDEV(\"track\", {\n        kind: \"captions\",\n        srcLang: caption.language,\n        src: caption.url\n      }, caption.language, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"VXopcn6tUExCoeUakfYpdDZOX6M=\", false, function () {\n  return [useTranslation];\n});\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","axios","jsxDEV","_jsxDEV","VideoPlayer","video","_s","t","captions","setCaptions","get","id","then","response","data","catch","error","console","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","url","type","map","caption","kind","srcLang","language","_c","$RefreshReg$"],"sources":["/Users/isakrabin/Development/github/grow-platform/frontend/src/components/VideoPlayer/VideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport '../../styles/global.css';\nimport './VideoPlayer.css';\n\nconst VideoPlayer = ({ video }) => {\n  const { t } = useTranslation();\n  const [captions, setCaptions] = useState([]);\n\n  useEffect(() => {\n    // Fetch captions from backend\n    axios.get(`/api/captions?videoId=${video.id}`)\n      .then(response => setCaptions(response.data))\n      .catch(error => console.error('Error fetching captions:', error));\n  }, [video]);\n\n  return (\n    <div className=\"video-player\">\n      <h2>{video.title}</h2>\n      <video controls>\n        <source src={video.url} type=\"video/mp4\" />\n        {captions.map(caption => (\n          <track key={caption.language} kind=\"captions\" srcLang={caption.language} src={caption.url} />\n        ))}\n      </video>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAChC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAE,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACS,GAAG,CAAC,yBAAyBL,KAAK,CAACM,EAAE,EAAE,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIJ,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,EAAKd,KAAK,CAACe;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBrB,OAAA;MAAOsB,QAAQ;MAAAN,QAAA,gBACbhB,OAAA;QAAQuB,GAAG,EAAErB,KAAK,CAACsB,GAAI;QAACC,IAAI,EAAC;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1ChB,QAAQ,CAACqB,GAAG,CAACC,OAAO,iBACnB3B,OAAA;QAA8B4B,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEF,OAAO,CAACG,QAAS;QAACP,GAAG,EAAEI,OAAO,CAACH;MAAI,GAA9EG,OAAO,CAACG,QAAQ;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgE,CAC7F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtBIF,WAAW;EAAA,QACDJ,cAAc;AAAA;AAAAkC,EAAA,GADxB9B,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}