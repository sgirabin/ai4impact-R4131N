{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\n  fallbackLng: 'en',\n  debug: true,\n  backend: {\n    loadPath: '/locales/{{lng}}.json'\n  },\n  interpolation: {\n    escapeValue: false\n  },\n  detection: {\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n    caches: ['localStorage', 'cookie']\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","Backend","LanguageDetector","use","init","fallbackLng","debug","backend","loadPath","interpolation","escapeValue","detection","order","caches"],"sources":["/Users/isakrabin/Development/github/grow-platform/frontend/src/i18n.js"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    backend: {\n      loadPath: '/locales/{{lng}}.json'\n    },\n    interpolation: {\n      escapeValue: false\n    },\n    detection: {\n      order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n      caches: ['localStorage', 'cookie']\n    }\n  });\n\nexport default i18n;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,gBAAgB,MAAM,kCAAkC;AAE/DH,IAAI,CACDI,GAAG,CAACF,OAAO,CAAC,CACZE,GAAG,CAACD,gBAAgB,CAAC,CACrBC,GAAG,CAACH,gBAAgB,CAAC,CACrBI,IAAI,CAAC;EACJC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDC,aAAa,EAAE;IACbC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE;IACTC,KAAK,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,cAAc,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC;IAC7FC,MAAM,EAAE,CAAC,cAAc,EAAE,QAAQ;EACnC;AACF,CAAC,CAAC;AAEJ,eAAed,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}