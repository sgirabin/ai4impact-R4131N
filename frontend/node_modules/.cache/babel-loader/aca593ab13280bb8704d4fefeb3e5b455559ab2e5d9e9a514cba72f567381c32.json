{"ast":null,"code":"var _jsxFileName = \"/Users/isakrabin/Development/github/grow-platform/frontend/src/components/VideoPlayer/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport '../../styles/global.css';\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    course\n  } = location.state || {}; // Expect `state` to include course details\n  const [captions, setCaptions] = useState([]);\n\n  // useEffect(() => {\n  //   console.log(\"Course\", course)\n  //   if (course) {\n  //     // Fetch captions from backend\n  //     axios.get(`/api/captions?videoId=${course._doc.id}`)\n  //       .then(response => {\n  //           console.log(\"Response\", response.data)\n  //           setCaptions(response.data)\n  //       })\n  //       .catch(error => console.error('Error fetching captions:', error));\n  //   }\n  // }, [course]);\n\n  if (!course) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: t('course_data_not_available')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  const getVideoEmbedUrl = url => {\n    if (!url) return ''; // Check if URL is undefined or null\n\n    const videoId = url.split('v=')[1]; // Extract video ID\n    if (!videoId) return ''; // If videoId extraction fails, return empty string\n\n    const lang = i18n.language;\n    const embedUrl = `https://www.youtube.com/embed/${videoId}?cc_load_policy=1&cc_lang_pref=${lang}&controls=0&rel=0`;\n    return embedUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => navigate('/courses'),\n        children: t('back_to_course_selection')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: course.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"480\",\n        src: getVideoEmbedUrl(course._doc.url),\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: course.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [t('duration'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this), \" \", course._doc.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [t('level'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }, this), \" \", course._doc.level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [t('source'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), \" \", course._doc.source]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"course-topics\",\n        children: course._doc.topics.map(topic => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"course-topic\",\n          children: topic\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"7SAYWe5B2MflmE0KArM7FPePjjM=\", false, function () {\n  return [useTranslation, useLocation, useNavigate];\n});\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","useTranslation","axios","jsxDEV","_jsxDEV","VideoPlayer","_s","t","i18n","location","navigate","course","state","captions","setCaptions","children","fileName","_jsxFileName","lineNumber","columnNumber","getVideoEmbedUrl","url","videoId","split","lang","language","embedUrl","className","href","onClick","title","width","height","src","_doc","frameBorder","allow","allowFullScreen","duration","level","source","topics","map","topic","_c","$RefreshReg$"],"sources":["/Users/isakrabin/Development/github/grow-platform/frontend/src/components/VideoPlayer/VideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport '../../styles/global.css';\nimport './VideoPlayer.css';\n\nconst VideoPlayer = () => {\n  const { t, i18n } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { course } = location.state || {}; // Expect `state` to include course details\n  const [captions, setCaptions] = useState([]);\n\n // useEffect(() => {\n //   console.log(\"Course\", course)\n //   if (course) {\n //     // Fetch captions from backend\n //     axios.get(`/api/captions?videoId=${course._doc.id}`)\n //       .then(response => {\n //           console.log(\"Response\", response.data)\n //           setCaptions(response.data)\n //       })\n //       .catch(error => console.error('Error fetching captions:', error));\n //   }\n // }, [course]);\n\n  if (!course) {\n    return <div>{t('course_data_not_available')}</div>;\n  }\n\n  const getVideoEmbedUrl = (url) => {\n      if (!url) return '';  // Check if URL is undefined or null\n\n      const videoId = url.split('v=')[1]; // Extract video ID\n      if (!videoId) return '';  // If videoId extraction fails, return empty string\n\n      const lang = i18n.language;\n      const embedUrl = `https://www.youtube.com/embed/${videoId}?cc_load_policy=1&cc_lang_pref=${lang}&controls=0&rel=0`;\n      return embedUrl;\n  };\n\n\n  return (\n    <div className=\"video-player\">\n      <nav className=\"breadcrumb\">\n        {/* Navigate back to course selection with preserved preferences */}\n        <a href=\"#\" onClick={() => navigate('/courses')}>{t('back_to_course_selection')}</a>\n      </nav>\n      <h2>{course.title}</h2>\n      <div className=\"video-container\">\n        <iframe\n          width=\"100%\"\n          height=\"480\"\n          src={getVideoEmbedUrl(course._doc.url)}\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n          title={course.title}\n        ></iframe>\n      </div>\n      <div className=\"course-details\">\n        <p><strong>{t('duration')}:</strong> {course._doc.duration}</p>\n        <p><strong>{t('level')}:</strong> {course._doc.level}</p>\n        <p><strong>{t('source')}:</strong> {course._doc.source}</p>\n        <p className=\"course-topics\">\n          {course._doc.topics.map(topic => (\n            <span key={topic} className=\"course-topic\">{topic}</span>\n          ))}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}